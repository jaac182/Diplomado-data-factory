{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TablaDetalleFactura",
						"type": "DatasetReference"
					},
					"name": "TablaDetalleFactura"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TablaResumenProductos",
						"type": "DatasetReference"
					},
					"name": "TablaResumen"
				}
			],
			"transformations": [
				{
					"name": "CamposParaAgrupar"
				},
				{
					"name": "AgruparPorProducto"
				},
				{
					"name": "OrdenarTotal"
				}
			],
			"script": "source(output(\n\t\tid_detalle as integer,\n\t\tid_factura as integer,\n\t\tproducto as string,\n\t\tcantidad as integer,\n\t\tprecio_unitario as decimal(19,4),\n\t\ttotal as decimal(19,4)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TablaDetalleFactura\nTablaDetalleFactura select(mapColumn(\n\t\tproducto,\n\t\tcantidad,\n\t\ttotal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CamposParaAgrupar\nCamposParaAgrupar aggregate(groupBy(producto),\n\tcantidad = sum(cantidad),\n\t\ttotal = sum(total)) ~> AgruparPorProducto\nAgruparPorProducto sort(desc(total, true)) ~> OrdenarTotal\nOrdenarTotal sink(input(\n\t\tid_rproducto as integer,\n\t\tproducto as string,\n\t\tcantidad_vendida as integer,\n\t\ttotal as decimal(10,2)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tproducto,\n\t\tcantidad_vendida = cantidad,\n\t\ttotal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TablaResumen"
		}
	}
}